<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.web.mapper.WebProductsClassMapper">

    <resultMap type="WebProductsClass" id="WebProductsClassResult">
        <id property="productClassId" column="product_class_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
        <result property="productClassName" column="product_class_name"/>
        <result property="productClassNameEn" column="product_class_name_en"/>
        <result property="avatar" column="avatar"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="parentName" column="parent_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectWebProductsClassVo">
        select d.product_class_id,
               d.parent_id,
               d.ancestors,
               d.product_class_name,
               d.product_class_name_en,
               d.avatar,
               d.order_num,
               d.leader,
               d.phone,
               d.email,
               d.status,
               d.del_flag,
               d.create_by,
               d.create_time
        from web_products_class d
    </sql>

    <select id="selectWebProductsClassList" parameterType="WebProductsClass" resultMap="WebProductsClassResult">
        <include refid="selectWebProductsClassVo"/>
        where d.del_flag = '0'
        <if test="productClassId != null and productClassId != 0">
            AND product_class_id = #{productClassId}
        </if>
        <if test="parentId != null and parentId != 0">
            AND parent_id = #{parentId}
        </if>
        <if test="productClassName != null and productClassName != ''">
            AND product_class_name like concat('%', #{productClassName}, '%')
        </if>
        <if test="productClassNameEn != null and productClassNameEn != ''">
            AND product_class_name_en like concat('%', #{productClassNameEn}, '%')
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        order by d.parent_id, d.order_num
    </select>

    <select id="selectProductClassById" parameterType="Long" resultMap="WebProductsClassResult">
        select d.product_class_id,
               d.parent_id,
               d.ancestors,
               d.product_class_name,
               d.product_class_name_en,
               d.avatar,
               d.order_num,
               d.leader,
               d.phone,
               d.email,
               d.status,
               (select product_class_name from web_products_class where product_class_id = d.parent_id) parent_name
        from web_products_class d
        where d.product_class_id = #{productClassId}
    </select>

    <select id="checkProductsClassExistProduct" parameterType="Long" resultType="int">
        select count(1)
        from web_product
        where class_id = #{productClassId}
          and del_flag = '0'
    </select>

    <select id="hasChildByProductClassId" parameterType="Long" resultType="int">
        select count(1)
        from web_products_class
        where del_flag = '0'
          and parent_id = #{productClassId}
        limit 1
    </select>

    <select id="selectChildrenProductClassById" parameterType="Long" resultMap="WebProductsClassResult">
        select *
        from web_products_class
        where find_in_set(#{productClassId}, ancestors)
    </select>

    <select id="selectNormalChildrenProductClassById" parameterType="Long" resultType="int">
        select count(*)
        from web_products_class
        where status = 0
          and del_flag = '0'
          and find_in_set(#{productClassId}, ancestors)
    </select>

    <select id="checkProductsClassNameUnique" resultMap="WebProductsClassResult">
        <include refid="selectWebProductsClassVo"/>
        where product_class_name=#{productClassName} and parent_id = #{parentId} and del_flag = '0' limit 1
    </select>

    <insert id="insertProductsClass" parameterType="WebProductsClass">
        insert into web_products_class(
        <if test="productClassId != null and productClassId != 0">product_class_id,</if>
        <if test="parentId != null and parentId != 0">parent_id,</if>
        <if test="productClassName != null and productClassName != ''">product_class_name,</if>
        <if test="productClassNameEn != null and productClassNameEn != ''">product_class_name_en,</if>
        <if test="avatar != null and avatar != ''">avatar,</if>
        <if test="ancestors != null and ancestors != ''">ancestors,</if>
        <if test="orderNum != null">order_num,</if>
        <if test="leader != null and leader != ''">leader,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="status != null">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="productClassId != null and productClassId != 0">#{productClassId},</if>
        <if test="parentId != null and parentId != 0">#{parentId},</if>
        <if test="productClassName != null and productClassName != ''">#{productClassName},</if>
        <if test="productClassNameEn != null and productClassNameEn != ''">#{productClassNameEn},</if>
        <if test="avatar != null and avatar != ''">#{avatar},</if>
        <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
        <if test="orderNum != null">#{orderNum},</if>
        <if test="leader != null and leader != ''">#{leader},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="status != null">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <update id="updateProductsClass" parameterType="WebProductsClass">
        update web_products_class
        <set>
            <if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
            <if test="productClassName != null and productClassName != ''">product_class_name = #{productClassName},</if>
            <if test="productClassNameEn != null and productClassNameEn != ''">product_class_name_en = #{productClassNameEn},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="leader != null">leader = #{leader},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where product_class_id = #{productClassId}
    </update>

    <update id="updateProductClassChildren" parameterType="java.util.List">
        update web_products_class set ancestors =
        <foreach collection="depts" item="item" index="index"
                 separator=" " open="case product_class_id" close="end">
            when #{item.productClassId} then #{item.ancestors}
        </foreach>
        where product_class_id in
        <foreach collection="depts" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.productClassId}
        </foreach>
    </update>

    <update id="updateProductsClassStatusNormal" parameterType="Long">
        update web_products_class set status = '0' where product_class_id in
        <foreach collection="array" item="productClassId" open="(" separator="," close=")">
            #{productClassId}
        </foreach>
    </update>

    <delete id="deleteProductsClassById" parameterType="Long">
        update web_products_class
        set del_flag = '2'
        where product_class_id = #{productClassId}
    </delete>

</mapper> 